{
	"$id": "http://example.com/example.json",
	"$schema": "http://json-schema.org/draft-07/schema",
	"definitions": {
		"access_token": {
			"default": "",
			"description": "The initial access token",
			"title": "Access token",
			"type": "string"
		},
		"block": {
			"allOf": [
				{
					"if": {
						"properties": {
							"type": {
								"const": "prompt"
							}
						}
					},
					"then": {
						"required": ["type", "alignment", "segments"],
						"title": "Prompt definition, contains 1 or more segments to render"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "rprompt"
							}
						}
					},
					"then": {
						"required": ["type", "segments"],
						"title": "RPrompt definition, contains 1 or more segments to render to the right of the cursor"
					}
				},
				{
					"if": {
						"properties": {
							"alignment": {
								"const": "right"
							},
							"type": {
								"const": "prompt"
							}
						}
					},
					"then": {
						"properties": {
							"overflow": {
								"default": "",
								"description": "https://ohmyposh.dev/docs/configuration/block#overflow",
								"enum": ["break", "hide"],
								"title": "Block overflow",
								"type": "string"
							}
						}
					}
				}
			],
			"description": "https://ohmyposh.dev/docs/configuration/block",
			"properties": {
				"alignment": {
					"default": "left",
					"description": "https://ohmyposh.dev/docs/configuration/block#alignment",
					"enum": ["left", "right"],
					"title": "Block alignment",
					"type": "string"
				},
				"newline": {
					"default": false,
					"description": "https://ohmyposh.dev/docs/configuration/block#newline",
					"title": "Newline",
					"type": "boolean"
				},
				"segments": {
					"default": [],
					"description": "https://ohmyposh.dev/docs/configuration/block#segments",
					"items": {
						"$ref": "#/definitions/segment"
					},
					"title": "Segments list, prompt elements to display based on context",
					"type": "array"
				},
				"type": {
					"default": "prompt",
					"description": "https://ohmyposh.dev/docs/configuration/block#type",
					"enum": ["prompt", "rprompt"],
					"title": "Block type",
					"type": "string"
				}
			},
			"type": "object"
		},
		"cache_timeout": {
			"default": 10,
			"description": "Minutes the response is cached. A value of 0 disables the cache.",
			"title": "cache timeout",
			"type": "integer"
		},
		"color": {
			"anyOf": [
				{
					"$ref": "#/definitions/color_string"
				},
				{
					"$ref": "#/definitions/palette_reference"
				}
			]
		},
		"color_string": {
			"description": "https://ohmyposh.dev/docs/configuration/colors",
			"format": "color",
			"pattern": "(#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})|^([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$|black|red|green|yellow|blue|magenta|cyan|white|default|darkGray|lightRed|lightGreen|lightYellow|lightBlue|lightMagenta|lightCyan|lightWhite|transparent|parentBackground|parentForeground|background|foreground|accent)$",
			"title": "Color string",
			"type": "string"
		},
		"display_mode": {
			"default": "context",
			"description": "Determines whether the segment is displayed always or only if a file matching the extensions are present in the current folder",
			"enum": ["always", "files", "environment", "context"],
			"title": "Display Mode",
			"type": "string"
		},
		"expires_in": {
			"default": 0,
			"description": "Access token expiration time in seconds",
			"title": "Expires in",
			"type": "integer"
		},
		"extra_prompt": {
			"default": {},
			"properties": {
				"background": {
					"$ref": "#/definitions/color"
				},
				"background_templates": {
					"$ref": "#/definitions/templates",
					"description": "https://ohmyposh.dev/docs/configuration/colors#color-templates"
				},
				"foreground": {
					"$ref": "#/definitions/color"
				},
				"foreground_templates": {
					"$ref": "#/definitions/templates",
					"description": "https://ohmyposh.dev/docs/configuration/colors#color-templates"
				},
				"template": {
					"title": "Prompt Template",
					"type": "string"
				}
			},
			"type": "object"
		},
		"fetch_version": {
			"default": true,
			"description": "Fetch the version number",
			"title": "Fetch Version",
			"type": "boolean"
		},
		"home_enabled": {
			"default": false,
			"description": "Display the segment in the HOME folder",
			"title": "Enable in the HOME folder",
			"type": "boolean"
		},
		"http_timeout": {
			"default": 20,
			"description": "Milliseconds to use for http request timeouts",
			"title": "Http request timeout",
			"type": "integer"
		},
		"missing_command_text": {
			"default": "",
			"description": "The string to display when the command is not available",
			"title": "Missing command text",
			"type": "string"
		},
		"palette_reference": {
			"description": "https://ohmyposh.dev/docs/configuration/colors#palette",
			"pattern": "p:.*$",
			"title": "Palette reference",
			"type": "string"
		},
		"refresh_token": {
			"default": "",
			"description": "The initial refresh token",
			"title": "Refresh token",
			"type": "string"
		},
		"segment": {
			"allOf": [
				{
					"if": {
						"properties": {
							"type": {
								"const": "project"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/project",
						"title": "Project Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "npm"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/npm",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "NPM Segment"
					}
				},
				{
					"if": {
						"properties": {
							"style": {
								"const": "powerline"
							}
						}
					},
					"then": {
						"properties": {
							"invert_powerline": {
								"default": false,
								"description": "https://ohmyposh.dev/docs/configuration/segment#invert-powerline",
								"title": "Flip the Powerline symbol vertically",
								"type": "boolean"
							},
							"powerline_symbol": {
								"default": "",
								"description": "https://ohmyposh.dev/docs/configuration/segment#powerline-symbol",
								"title": "Powerline Symbol",
								"type": "string"
							}
						}
					}
				},
				{
					"if": {
						"properties": {
							"style": {
								"const": "diamond"
							}
						}
					},
					"then": {
						"properties": {
							"leading_diamond": {
								"default": "",
								"description": "https://ohmyposh.dev/docs/configuration/segment#leading-diamond",
								"title": "Leading diamond",
								"type": "string"
							},
							"trailing_diamond": {
								"default": "",
								"description": "https://ohmyposh.dev/docs/configuration/segment#trailing-diamond",
								"title": "Trailing diamond",
								"type": "string"
							}
						}
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "az"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/az",
						"properties": {
							"properties": {
								"properties": {
									"source": {
										"default": "first_match",
										"description": "https://ohmyposh.dev/docs/az#properties",
										"enum": ["first_match", "cli", "pwsh"],
										"title": "Source",
										"type": "string"
									}
								}
							}
						},
						"title": "Azure Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "battery"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/battery",
						"properties": {
							"properties": {
								"properties": {
									"charged_icon": {
										"default": "",
										"description": "Text/icon to display when fully charged",
										"title": "Charged Icon",
										"type": "string"
									},
									"charging_icon": {
										"default": "",
										"description": "Text/icon to display when charging",
										"title": "Charging Icon",
										"type": "string"
									},
									"discharging_icon": {
										"default": "",
										"description": "Text/icon to display when discharging",
										"title": "discharging Dcon",
										"type": "string"
									},
									"display_error": {
										"default": false,
										"description": "Show the error context when failing to retrieve the battery information",
										"title": "Display Error",
										"type": "boolean"
									},
									"not_charging_icon": {
										"default": "",
										"description": "Text/icon to display when on AC power",
										"title": "Not Charging Icon",
										"type": "string"
									}
								}
							}
						},
						"title": "Battery Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "command"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/command",
						"properties": {
							"properties": {
								"properties": {
									"command": {
										"default": "",
										"description": "the command(s) to run",
										"title": "Command",
										"type": "string"
									},
									"script": {
										"default": "",
										"description": "A script to run",
										"title": "Script",
										"type": "string"
									},
									"shell": {
										"default": "bash",
										"description": "The shell in which to run the command in. Uses shell -c command under the hood",
										"title": "Shell",
										"type": "string"
									}
								}
							}
						},
						"title": "Command Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "connection"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/connection",
						"properties": {
							"properties": {
								"properties": {
									"type": {
										"default": "wifi|ethernet",
										"description": "The connection type to display",
										"enum": [
											"ethernet",
											"wifi",
											"cellular",
											"bluetooth"
										],
										"title": "Connection type",
										"type": "string"
									},
									"unit": {
										"default": "none",
										"enum": [
											"none",
											"b",
											"bps",
											"K",
											"Kbps",
											"M",
											"Mbps",
											"G",
											"Gbps",
											"T",
											"Tbps"
										],
										"title": "Transfer speed unit",
										"type": "string"
									}
								}
							}
						},
						"title": "Connection Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "cmake"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/cmake",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Cmake Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "dotnet"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/dotnet",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Dotnet Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "exit"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/exit",
						"properties": {
							"properties": {
								"properties": {
									"always_enabled": {
										"default": false,
										"description": "Always show the status",
										"title": "Always Enabled",
										"type": "boolean"
									}
								}
							}
						},
						"title": "Exit Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "flutter"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/flutter",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									}
								}
							}
						},
						"title": "Flutter Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "fossil"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/fossil",
						"title": "Fossil Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "git"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/git",
						"properties": {
							"properties": {
								"properties": {
									"azure_devops_icon": {
										"default": "ﴃ",
										"description": "Icon/text to display when the upstream is Azure DevOps",
										"title": "Azure DevOps Icon",
										"type": "string"
									},
									"bitbucket_icon": {
										"default": "",
										"description": "Icon/text to display when the upstream is Bitbucket",
										"title": "Bitbucket Icon",
										"type": "string"
									},
									"branch_ahead_icon": {
										"default": "↑",
										"description": "The icon to display when the local branch is ahead of its remote",
										"title": "Branch Ahead Icon",
										"type": "string"
									},
									"branch_behind_icon": {
										"default": "↓",
										"description": "The icon to display when the local branch is behind its remote",
										"title": "Branch Behind Icon",
										"type": "string"
									},
									"branch_gone_icon": {
										"default": "≢",
										"description": "The icon to display when there's no remote branch",
										"title": "Branch Gone Icon",
										"type": "string"
									},
									"branch_icon": {
										"default": " ",
										"description": "The icon to use in front of the git branch name",
										"title": "Branch Icon",
										"type": "string"
									},
									"branch_identical_icon": {
										"default": "≡",
										"description": "The icon to display when remote and local are identical",
										"title": "Branch Identical Icon",
										"type": "string"
									},
									"branch_max_length": {
										"default": 0,
										"description": "the max length for the displayed branch name where 0 implies full length",
										"title": "Branch max length",
										"type": "integer"
									},
									"cherry_pick_icon": {
										"default": "",
										"description": "Icon/text to display before the context when doing a cherry-pick",
										"title": "Cherry-pick Icon",
										"type": "string"
									},
									"commit_icon": {
										"default": "",
										"description": "Icon/text to display before the commit context (detached HEAD)",
										"title": "Commit Icon",
										"type": "string"
									},
									"fetch_bare_info": {
										"default": false,
										"description": "Fetch info when in a bare repo or not",
										"title": "Fetch info when in a bare repo",
										"type": "boolean"
									},
									"fetch_stash_count": {
										"default": false,
										"description": "Display the stash count or not",
										"title": "Display Stash Count",
										"type": "boolean"
									},
									"fetch_status": {
										"default": true,
										"description": "Display the local changes or not",
										"title": "Display Status",
										"type": "boolean"
									},
									"fetch_upstream_icon": {
										"default": false,
										"description": "Display upstream icon or not",
										"title": "Display Upstream Icon",
										"type": "boolean"
									},
									"fetch_worktree_count": {
										"default": false,
										"description": "Display the worktree count or not",
										"title": "Display Worktree Count",
										"type": "boolean"
									},
									"git_icon": {
										"default": "",
										"description": "Icon/text to display when the upstream is not known/mapped",
										"title": "Git Icon",
										"type": "string"
									},
									"github_icon": {
										"default": "",
										"description": "Icon/text to display when the upstream is Github",
										"title": "Github Icon",
										"type": "string"
									},
									"gitlab_icon": {
										"default": "",
										"description": "Icon/text to display when the upstream is Gitlab",
										"title": "Gitlab Icon",
										"type": "string"
									},
									"ignore_submodules": {
										"default": {},
										"description": "Ignore changes to submodules when looking for changes",
										"title": "Ignore submodules",
										"type": "object"
									},
									"merge_icon": {
										"default": "",
										"description": "Icon/text to display before the merge context",
										"title": "Merge Icon",
										"type": "string"
									},
									"no_commits_icon": {
										"default": "",
										"description": "Icon/text to display when there are no commits in the repo",
										"title": "No Commits Icon",
										"type": "string"
									},
									"rebase_icon": {
										"default": "",
										"description": "Icon/text to display before the context when in a rebase",
										"title": "Rebase Icon",
										"type": "string"
									},
									"revert_icon": {
										"default": "",
										"description": "Icon/text to display before the context when doing a revert",
										"title": "Revert Icon",
										"type": "string"
									},
									"tag_icon": {
										"default": "",
										"description": "Icon/text to display before the tag context",
										"title": "Tag Icon",
										"type": "string"
									},
									"untracked_modes": {
										"default": {},
										"description": "Set the untracked files mode for a repository",
										"title": "Untracked files mode",
										"type": "object"
									}
								}
							}
						},
						"title": "Git Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "go"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/golang",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"parse_mod_file": {
										"default": false,
										"description": "Parse go.mod file instead of calling out to go to improve performance.",
										"title": "Parse go.mod file",
										"type": "boolean"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Golang Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "dart"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/dart",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Dart Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "deno"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/deno",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Deno CLI Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "crystal"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/crystal",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Crystal Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "julia"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/julia",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Julia Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "perl"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/perl",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									}
								}
							}
						},
						"title": "Perl Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "php"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/php",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "PHP Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "java"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/java",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									}
								}
							}
						},
						"title": "Java Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "ruby"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/ruby",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									}
								}
							}
						},
						"title": "Ruby Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "rust"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/rust",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									}
								}
							}
						},
						"title": "Rust Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "kubectl"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/kubectl",
						"properties": {
							"properties": {
								"properties": {
									"display_error": {
										"default": false,
										"description": "Show the error context when failing to retrieve the kubectl information",
										"title": "Display Error",
										"type": "boolean"
									},
									"parse_kubeconfig": {
										"default": false,
										"description": "Parse kubeconfig files instead of calling out to kubectl to improve performance.",
										"title": "Parse kubeconfig",
										"type": "boolean"
									}
								}
							}
						},
						"title": "Kubectl Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "aws"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/aws",
						"properties": {
							"properties": {
								"properties": {
									"display_default": {
										"default": true,
										"description": "Display the segment when default user or not",
										"title": "Display Default User Profile",
										"type": "boolean"
									}
								}
							}
						},
						"title": "AWS Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "node"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/node",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_package_manager": {
										"default": false,
										"description": "Assigns the Yarn or NPM icon to .PackageManagerIcon",
										"title": "Fetch Display Package Manager",
										"type": "boolean"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"npm_icon": {
										"default": " ",
										"description": "Icon/text to use for NPM",
										"title": "NPM Icon",
										"type": "string"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									},
									"yarn_icon": {
										"default": " ",
										"description": "Icon/text to use for Yarn",
										"title": "Yarn Icon",
										"type": "string"
									}
								}
							}
						},
						"title": "Node Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "azfunc"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/azfunc",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									}
								}
							}
						},
						"title": "Azure Function Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "os"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/os",
						"properties": {
							"properties": {
								"properties": {
									"alpine": {
										"default": "",
										"description": "The icon to use for Alpine",
										"title": "Alpine Icon",
										"type": "string"
									},
									"aosc": {
										"default": "",
										"description": "The icon to use for Aosc",
										"title": "Aosc Icon",
										"type": "string"
									},
									"arch": {
										"default": "",
										"description": "The icon to use for Arch",
										"title": "Arch Icon",
										"type": "string"
									},
									"centos": {
										"default": "",
										"description": "The icon to use for Centos",
										"title": "Centos Icon",
										"type": "string"
									},
									"coreos": {
										"default": "",
										"description": "The icon to use for Coreos",
										"title": "Coreos Icon",
										"type": "string"
									},
									"debian": {
										"default": "",
										"description": "The icon to use for Debian",
										"title": "Debian Icon",
										"type": "string"
									},
									"devuan": {
										"default": "",
										"description": "The icon to use for Devuan",
										"title": "Devuan Icon",
										"type": "string"
									},
									"display_distro_name": {
										"default": false,
										"description": "Display the distro name or icon or not",
										"title": "Display Distro Name",
										"type": "boolean"
									},
									"elementary": {
										"default": "",
										"description": "The icon to use for Elementary",
										"title": "Elementary Icon",
										"type": "string"
									},
									"fedora": {
										"default": "",
										"description": "The icon to use for Fedora",
										"title": "Fedora Icon",
										"type": "string"
									},
									"gentoo": {
										"default": "",
										"description": "The icon to use for Gentoo",
										"title": "Gentoo Icon",
										"type": "string"
									},
									"linux": {
										"default": "",
										"description": "Icon/text to use for Linux",
										"title": "Linux Icon",
										"type": "string"
									},
									"macos": {
										"default": "",
										"description": "Icon/text to use for macOS",
										"title": "MacOS Icon",
										"type": "string"
									},
									"mageia": {
										"default": "",
										"description": "The icon to use for Mageia",
										"title": "Mageia Icon",
										"type": "string"
									},
									"manjaro": {
										"default": "",
										"description": "The icon to use for Manjaro",
										"title": "Manjaro Icon",
										"type": "string"
									},
									"mint": {
										"default": "",
										"description": "The icon to use for Mint",
										"title": "Mint Icon",
										"type": "string"
									},
									"nixos": {
										"default": "",
										"description": "The icon to use for Nixos",
										"title": "Nixos Icon",
										"type": "string"
									},
									"opensuse": {
										"default": "",
										"description": "The icon to use for Opensuse",
										"title": "Opensuse Icon",
										"type": "string"
									},
									"raspbian": {
										"default": "",
										"description": "The icon to use for Raspbian",
										"title": "Raspbian Icon",
										"type": "string"
									},
									"sabayon": {
										"default": "",
										"description": "The icon to use for Sabayon",
										"title": "Sabayon Icon",
										"type": "string"
									},
									"slackware": {
										"default": "",
										"description": "The icon to use for Slackware",
										"title": "Slackware Icon",
										"type": "string"
									},
									"ubuntu": {
										"default": "",
										"description": "The icon to use for Ubuntu",
										"title": "Ubuntu Icon",
										"type": "string"
									},
									"windows": {
										"default": "",
										"description": "Icon/text to use for Windows",
										"title": "Windows Icon",
										"type": "string"
									}
								}
							}
						},
						"title": "Operating System Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "path"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/path",
						"properties": {
							"properties": {
								"properties": {
									"folder_icon": {
										"default": "..",
										"description": "The icon to use as a folder indication",
										"title": "Folder Icon",
										"type": "string"
									},
									"folder_separator_icon": {
										"default": "/",
										"description": "The symbol to use as a separator between folders",
										"title": "Folder Separator Icon",
										"type": "string"
									},
									"hide_root_location": {
										"default": false,
										"description": "Hides the root location, when using agnoster_short style, if it doesn't fit in the last max_depth folders.",
										"title": "Hide the root location",
										"type": "boolean"
									},
									"home_icon": {
										"default": "/",
										"description": "The icon to display when at $HOME",
										"title": "Home Icon",
										"type": "string"
									},
									"mapped_locations": {
										"default": {},
										"description": "Custom glyph/text for specific paths",
										"title": "Mapped Locations",
										"type": "object"
									},
									"mapped_locations_enabled": {
										"default": true,
										"description": "Replace known locations in the path with the replacements before applying the style.",
										"title": "Enable the Mapped Locations feature",
										"type": "boolean"
									},
									"max_depth": {
										"default": 1,
										"description": "Maximum path depth to display without shortening",
										"title": "Maximum Depth",
										"type": "integer"
									},
									"mixed_threshold": {
										"default": 4,
										"description": "The maximum length of a path segment that will be displayed when using mixed style.",
										"title": "Mixed threshold",
										"type": "integer"
									},
									"style": {
										"default": "folder",
										"description": "How to display the current path",
										"enum": [
											"agnoster",
											"agnoster_full",
											"agnoster_short",
											"agnoster_left",
											"short",
											"full",
											"folder",
											"mixed",
											"letter",
											"unique"
										],
										"title": "The Path Style",
										"type": "string"
									},
									"windows_registry_icon": {
										"default": "",
										"description": "The icon to display when in the Windows registry",
										"title": "Windows Registry Icon",
										"type": "string"
									}
								}
							}
						},
						"title": "Path Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "python"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/python",
						"properties": {
							"properties": {
								"properties": {
									"display_default": {
										"default": true,
										"description": "Show the name of the virtualenv when it's default",
										"title": "Display Default",
										"type": "boolean"
									},
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"fetch_virtual_env": {
										"default": true,
										"description": "Fetch the name of the virtualenv or not",
										"title": "Fetch Virtual Env",
										"type": "boolean"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Python Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "root"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/root",
						"title": "Root Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "session"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/session",
						"properties": {
							"properties": {
								"properties": {
									"ssh_icon": {
										"default": "",
										"description": "Text/icon to display first when in an active SSH session",
										"title": "SSH Icon",
										"type": "string"
									}
								}
							}
						},
						"title": "Session Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "shell"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/shell",
						"properties": {
							"properties": {
								"properties": {
									"custom_text": {
										"default": {},
										"description": "Custom glyph/text for specific shells",
										"title": "Custom Text",
										"type": "object"
									}
								}
							}
						},
						"title": "Shell Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "spotify"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/spotify",
						"properties": {
							"properties": {
								"properties": {
									"paused_icon": {
										"default": "",
										"description": "Text/icon to show when paused",
										"title": "SSH Icon",
										"type": "string"
									},
									"playing_icon": {
										"default": "",
										"description": "Text/icon to show when playing",
										"title": "User Info Separator",
										"type": "string"
									},
									"stopped_icon": {
										"default": "",
										"description": "Text/icon to show when stopped",
										"title": "SSH Icon",
										"type": "string"
									},
									"track_separator": {
										"default": " - ",
										"description": "Text/icon to put between the artist and song name",
										"title": "SSH Icon",
										"type": "string"
									}
								}
							}
						},
						"title": "Spotify Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "terraform"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/terraform",
						"title": "Terraform Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "text"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/text",
						"properties": {
							"properties": {
								"properties": {
									"text": {
										"default": "",
										"description": "Text/icon to display",
										"title": "Text",
										"type": "string"
									}
								}
							}
						},
						"title": "Text Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "time"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/time",
						"properties": {
							"properties": {
								"properties": {
									"time_format": {
										"default": "15:04:05",
										"description": "Format to use, follows the golang standard: https://gobyexample.com/time-formatting-parsing",
										"title": "Time Format",
										"type": "string"
									}
								}
							}
						},
						"title": "Time Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "ytm"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/ytm",
						"properties": {
							"properties": {
								"properties": {
									"api_url": {
										"default": "http://127.0.0.1:9863",
										"description": "The YTMDA Remote Control API URL",
										"title": "API URL",
										"type": "string"
									},
									"http_timeout": {
										"$ref": "#/definitions/http_timeout"
									},
									"paused_icon": {
										"default": "",
										"description": "Text/icon to show when paused",
										"title": "SSH Icon",
										"type": "string"
									},
									"playing_icon": {
										"default": "",
										"description": "Text/icon to show when playing",
										"title": "User Info Separator",
										"type": "string"
									},
									"stopped_icon": {
										"default": "",
										"description": "Text/icon to show when stopped",
										"title": "SSH Icon",
										"type": "string"
									},
									"track_separator": {
										"default": " - ",
										"description": "Text/icon to put between the artist and song name",
										"title": "SSH Icon",
										"type": "string"
									}
								}
							}
						},
						"title": "YouTube Music Desktop App Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "owm"
							}
						}
					},
					"then": {
						"description": "Displays the current weather from the Open Weather Map system",
						"properties": {
							"properties": {
								"properties": {
									"apikey": {
										"default": ".",
										"description": "The apikey used for the api call (Required)",
										"title": "apikey",
										"type": "string"
									},
									"cache_timeout": {
										"$ref": "#/definitions/cache_timeout"
									},
									"http_timeout": {
										"$ref": "#/definitions/http_timeout"
									},
									"location": {
										"default": "De Bilt,NL",
										"description": "Location to use for the api call. Formatted as <City>,<STATE>,<COUNTRY_CODE>. City name, state code and country code divided by comma. Please, refer to ISO 3166 for the state codes or country codes.",
										"title": "location",
										"type": "string"
									},
									"units": {
										"default": "standard",
										"description": "Units of measurement. Available values are standard (kelvin), metric (celsius), and imperial (fahrenheit). Default is standard",
										"enum": [
											"standard",
											"metric",
											"imperial"
										],
										"title": "units",
										"type": "string"
									}
								}
							}
						},
						"title": "Open Weather Map Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "executiontime"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/executiontime",
						"properties": {
							"properties": {
								"properties": {
									"always_enabled": {
										"default": false,
										"description": "Always show the duration",
										"title": "Always Enabled",
										"type": "boolean"
									},
									"style": {
										"default": "austin",
										"description": "The style in which the time will be displayed",
										"enum": [
											"austin",
											"roundrock",
											"dallas",
											"galveston",
											"galvestonms",
											"houston",
											"amarillo",
											"round"
										],
										"title": "Style",
										"type": "string"
									},
									"threshold": {
										"default": 500,
										"description": "minimum duration (milliseconds) required to enable this segment",
										"title": "Threshold",
										"type": "number"
									}
								}
							}
						},
						"title": "Displays the execution time of the previously executed command"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "sysinfo"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/sysinfo",
						"properties": {
							"properties": {
								"properties": {
									"precision": {
										"default": 0,
										"description": "number of decimal places to show",
										"title": "Precision",
										"type": "integer"
									}
								}
							}
						},
						"title": "Get sysinfo"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "strava"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/strava",
						"properties": {
							"properties": {
								"properties": {
									"access_token": {
										"$ref": "#/definitions/access_token"
									},
									"cache_timeout": {
										"$ref": "#/definitions/cache_timeout"
									},
									"expires_in": {
										"$ref": "#/definitions/expires_in"
									},
									"http_timeout": {
										"$ref": "#/definitions/http_timeout"
									},
									"refresh_token": {
										"$ref": "#/definitions/refresh_token"
									},
									"ride_icon": {
										"default": "",
										"description": "Alternative icon for this activity type",
										"title": "Alternative icon",
										"type": "string"
									},
									"run_icon": {
										"default": "ﰌ",
										"description": "Alternative icon for this activity type",
										"title": "Alternative icon",
										"type": "string"
									},
									"skiing_icon": {
										"default": "",
										"description": "Alternative icon for this activity type",
										"title": "Alternative icon",
										"type": "string"
									},
									"unknown_activity_icon": {
										"default": "",
										"description": "Fallback icon for other activity types",
										"title": "Fallback icon",
										"type": "string"
									},
									"url": {
										"default": "",
										"description": "Url of your api provinding a Strava activity",
										"title": "URL of API with Strava data",
										"type": "string"
									},
									"workout_icon": {
										"default": "",
										"description": "Alternative icon for this activity type",
										"title": "Alternative icon",
										"type": "string"
									}
								}
							}
						},
						"title": "Display training data from Strava"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "svn"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/svn",
						"properties": {
							"properties": {
								"properties": {
									"fetch_status": {
										"default": true,
										"description": "Display the local changes or not",
										"title": "Display Status",
										"type": "boolean"
									}
								}
							}
						},
						"title": "SVN Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "angular"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/angular",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Angular CLI Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "nx"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/nx",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Nx Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "wakatime"
							}
						}
					},
					"then": {
						"description": "Displays the tracked time on wakatime.com",
						"properties": {
							"properties": {
								"properties": {
									"apikey": {
										"default": ".",
										"description": "The apikey used for the api call (Required)",
										"title": "apikey",
										"type": "string"
									},
									"cache_timeout": {
										"$ref": "#/definitions/cache_timeout"
									},
									"http_timeout": {
										"$ref": "#/definitions/http_timeout"
									}
								}
							}
						},
						"title": "Wakatime"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "winreg"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/winreg",
						"properties": {
							"properties": {
								"properties": {
									"fallback": {
										"default": "",
										"description": "Value to display if registry value cannot be retrieved",
										"title": "Fallback value",
										"type": "string"
									},
									"path": {
										"default": "",
										"description": "The path to the registry key (case insensitive, must use backslashes).  Ending with \\ will retrieve \"(Default)\" key in that path.",
										"title": "Registry Path",
										"type": "string"
									}
								}
							}
						},
						"title": "Windows Registry Query"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "withings"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/withings",
						"properties": {
							"properties": {
								"properties": {
									"access_token": {
										"$ref": "#/definitions/access_token"
									},
									"cache_timeout": {
										"$ref": "#/definitions/cache_timeout"
									},
									"expires_in": {
										"$ref": "#/definitions/expires_in"
									},
									"http_timeout": {
										"$ref": "#/definitions/http_timeout"
									},
									"refresh_token": {
										"$ref": "#/definitions/refresh_token"
									}
								}
							}
						},
						"title": "Display activity data from Withings"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "plastic"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/plastic",
						"properties": {
							"properties": {
								"properties": {
									"branch_icon": {
										"default": " ",
										"description": "The icon to use in front of the selector branch name",
										"title": "Branch Icon",
										"type": "string"
									},
									"branch_max_length": {
										"default": 0,
										"description": "the max length for the displayed branch name where 0 implies full length",
										"title": "Branch max length",
										"type": "integer"
									},
									"commit_icon": {
										"default": "",
										"description": "Icon/text to display before the selector changeset",
										"title": "Commit Icon",
										"type": "string"
									},
									"fetch_status": {
										"default": false,
										"description": "Display the local changes or not",
										"title": "Display Status",
										"type": "boolean"
									},
									"full_branch_path": {
										"default": false,
										"description": "display the full branch path instead of only the branch name",
										"title": "Full branch path",
										"type": "boolean"
									},
									"tag_icon": {
										"default": "",
										"description": "Icon/text to display before the seletor label",
										"title": "Tag Icon",
										"type": "string"
									}
								}
							}
						},
						"title": "Plastic SCM Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "brewfather"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/brewfather",
						"properties": {
							"properties": {
								"properties": {
									"api_key": {
										"default": "",
										"description": "Provided by Brewfather's Generate API Key settings option",
										"title": "Brewfather API Key (required)",
										"type": "string"
									},
									"archived_status_icon": {
										"default": "",
										"description": "Available in template as .StatusIcon",
										"title": "Icon for archived batch",
										"type": "string"
									},
									"batch_id": {
										"default": "",
										"description": "At the end of the URL when viewing the batch on the Brewfather site",
										"title": "ID of the batch in Brewfather (required)",
										"type": "string"
									},
									"brewing_status_icon": {
										"default": "",
										"description": "Available in template as .StatusIcon",
										"title": "Icon for batch being brewed",
										"type": "string"
									},
									"cache_timeout": {
										"$ref": "#/definitions/cache_timeout"
									},
									"completed_status_icon": {
										"default": "",
										"description": "Available in template as .StatusIcon",
										"title": "Icon for completed batch",
										"type": "string"
									},
									"conditioning_status_icon": {
										"default": "",
										"description": "Available in template as .StatusIcon",
										"title": "Icon for batch conditioning",
										"type": "string"
									},
									"day_icon": {
										"default": "d",
										"description": "Appended to a number to indicate days, e.g. 25d",
										"title": "Icon to use to indicate days",
										"type": "string"
									},
									"doubledown_icon": {
										"default": "↓↓",
										"description": "Delta between this and prior temperature reading is very large negative (> -4C by default), available intemplate as .TemperatureTrend",
										"title": "Temperature trend icon, very high negative change",
										"type": "string"
									},
									"doubleup_icon": {
										"default": "↑↑",
										"description": "Delta between this and prior temperature reading is very high (> 4C by default), available intemplate as .TemperatureTrend",
										"title": "Temperature trend icon, very high positive change",
										"type": "string"
									},
									"fermenting_status_icon": {
										"default": "",
										"description": "Available in template as .StatusIcon",
										"title": "Icon for batch fermenting",
										"type": "string"
									},
									"flat_icon": {
										"default": "→",
										"description": "Delta between this and prior temperature and this temperature reading (< +-0.5C change), available intemplate as .TemperatureTrend",
										"title": "Temperature trend icon, flat/small change",
										"type": "string"
									},
									"fortyfivedown_icon": {
										"default": "↘",
										"description": "Delta between this and prior temperature reading is negative (-0.5C > delta > -2C by default), available intemplate as .TemperatureTrend",
										"title": "Temperature trend icon, v. negative change",
										"type": "string"
									},
									"fortyfiveup_icon": {
										"default": "↗",
										"description": "Delta between this and prior temperature reading is positive (0.5C < delta < 2C by default), available intemplate as .TemperatureTrend",
										"title": "Temperature trend icon, positive change",
										"type": "string"
									},
									"http_timeout": {
										"$ref": "#/definitions/http_timeout"
									},
									"planning_status_icon": {
										"default": "",
										"description": "Available in template as .StatusIcon",
										"title": "Icon for batch in planning",
										"type": "string"
									},
									"singledown_icon": {
										"default": "↓",
										"description": "Delta between this and prior temperature reading is large negative (-2C > delta > -4C by default), available intemplate as .TemperatureTrend",
										"title": "Temperature trend icon, high negative change",
										"type": "string"
									},
									"singleup_icon": {
										"default": "↑",
										"description": "Delta between this and prior temperature reading is high (2C < delta < 4C by default), available intemplate as .TemperatureTrend",
										"title": "Temperature trend icon, high positive change",
										"type": "string"
									},
									"user_id": {
										"default": "",
										"description": "Provided by Brewfather's Generate API Key settings option",
										"title": "Brewfather UserID (required)",
										"type": "string"
									}
								}
							}
						},
						"title": "Brewfather Batch Status"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "ipify"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/ipify",
						"properties": {
							"properties": {
								"properties": {
									"cache_timeout": {
										"$ref": "#/definitions/cache_timeout"
									},
									"http_timeout": {
										"$ref": "#/definitions/http_timeout"
									},
									"url": {
										"default": "https://api.ipify.org",
										"description": "The Ipify API URL",
										"title": "URL",
										"type": "string"
									}
								}
							}
						},
						"title": "Display your external IP Address"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "haskell"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/haskell",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"stack_ghc_mode": {
										"default": "never",
										"description": "Get the GHC version used by Stack. Will decrease performance. Boolean indicating whether stack ghc was used available in template as .StackGhc",
										"enum": ["always", "package", "never"],
										"title": "Use Stack GHC",
										"type": "string"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Haskell Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "ui5tooling"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/ui5tooling",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "UI5 tooling CLI segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "cf"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/cf",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Clound Foundry CLI segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "cftarget"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/cftarget",
						"title": "Clound Foundry Target segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "kotlin"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/kotlin",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Kotlin Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "lua"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/lua",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"preferred_executable": {
										"default": "lua",
										"description": "The preferred executable to use when fetching the version.",
										"enum": ["lua", "luajit"],
										"title": "Preferred Executable",
										"type": "string"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Lua Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "swift"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/swift",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "Swift Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "cds"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/cds",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									}
								}
							}
						},
						"title": "CDS (SAP CAP) segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "r"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/r",
						"properties": {
							"properties": {
								"properties": {
									"display_mode": {
										"$ref": "#/definitions/display_mode"
									},
									"fetch_version": {
										"$ref": "#/definitions/fetch_version"
									},
									"home_enabled": {
										"$ref": "#/definitions/home_enabled"
									},
									"missing_command_text": {
										"$ref": "#/definitions/missing_command_text"
									},
									"version_url_template": {
										"$ref": "#/definitions/version_url_template"
									}
								}
							}
						},
						"title": "R Segment"
					}
				},
				{
					"if": {
						"properties": {
							"type": {
								"const": "gcp"
							}
						}
					},
					"then": {
						"description": "https://ohmyposh.dev/docs/segments/gcp",
						"title": "GCP Segment"
					}
				}
			],
			"default": {},
			"description": "https://ohmyposh.dev/docs/configuration/segment",
			"properties": {
				"alias": {
					"default": "",
					"description": "https://ohmyposh.dev/docs/configuration/segment#alias",
					"title": "Give the segment an alias for use in templates",
					"type": "string"
				},
				"background": {
					"$ref": "#/definitions/color"
				},
				"background_templates": {
					"$ref": "#/definitions/templates",
					"description": "https://ohmyposh.dev/docs/configuration/colors#color-templates"
				},
				"foreground": {
					"$ref": "#/definitions/color"
				},
				"foreground_templates": {
					"$ref": "#/definitions/templates",
					"description": "https://ohmyposh.dev/docs/configuration/colors#color-templates"
				},
				"interactive": {
					"default": false,
					"description": "https://ohmyposh.dev/docs/configuration/segment#interactive",
					"title": "Allow the use of interactive prompt escape sequences",
					"type": "boolean"
				},
				"properties": {
					"default": {},
					"description": "https://ohmyposh.dev/docs/configuration/segment#properties",
					"properties": {
						"exclude_folders": {
							"default": [],
							"description": "https://ohmyposh.dev/docs/configuration/segment#include--exclude-folders",
							"items": {
								"type": "string"
							},
							"title": "Exclude rendering in these folders",
							"type": "array"
						},
						"ignore_folders": {
							"default": [],
							"deprecated": true,
							"description": "https://ohmyposh.dev/docs/configuration/segment#include--exclude-folders",
							"items": {
								"type": "string"
							},
							"title": "Deprecated - please use `exclude_folders` instead",
							"type": "array"
						},
						"include_folders": {
							"default": [],
							"description": "https://ohmyposh.dev/docs/configuration/segment#include--exclude-folders",
							"items": {
								"type": "string"
							},
							"title": "If specified, segment will only render in these folders",
							"type": "array"
						}
					},
					"title": "Segment Properties, used to change behavior/displaying",
					"type": "object"
				},
				"style": {
					"description": "https://ohmyposh.dev/docs/configuration/segment#style",
					"enum": ["plain", "powerline", "diamond", "accordion"],
					"title": "Segment Style",
					"type": "string"
				},
				"template": {
					"default": "",
					"description": "https://ohmyposh.dev/docs/configuration/templates",
					"title": "Template text",
					"type": "string"
				},
				"templates": {
					"$ref": "#/definitions/templates",
					"description": "https://ohmyposh.dev/docs/configuration/segment#templates"
				},
				"templates_logic": {
					"description": "https://ohmyposh.dev/docs/configuration/segment#templates",
					"enum": ["first_match", "join"],
					"title": "Templates Logic",
					"type": "string"
				},
				"type": {
					"description": "https://ohmyposh.dev/docs/configuration/segment#type",
					"enum": [
						"az",
						"aws",
						"azfunc",
						"angular",
						"battery",
						"command",
						"connection",
						"crystal",
						"cds",
						"cf",
						"cftarget",
						"cmake",
						"dotnet",
						"dart",
						"exit",
						"executiontime",
						"flutter",
						"fossil",
						"gcp",
						"git",
						"go",
						"haskell",
						"ipify",
						"iterm",
						"julia",
						"java",
						"kotlin",
						"kubectl",
						"lua",
						"node",
						"npm",
						"nx",
						"os",
						"owm",
						"path",
						"perl",
						"python",
						"php",
						"plastic",
						"project",
						"root",
						"ruby",
						"rust",
						"r",
						"session",
						"spotify",
						"shell",
						"sysinfo",
						"strava",
						"svn",
						"swift",
						"time",
						"text",
						"terraform",
						"ui5tooling",
						"wakatime",
						"winreg",
						"withings",
						"ytm"
					],
					"title": "Segment Type",
					"type": "string"
				}
			},
			"required": ["type", "style"],
			"title": "A segment",
			"type": "object"
		},
		"templates": {
			"default": [],
			"items": {
				"$ref": "#/definitions/segment/properties/template"
			},
			"title": "An array of templates",
			"type": "array"
		},
		"version_url_template": {
			"default": "",
			"description": "Template that creates the URL of the version info / release notes",
			"title": "Version Url Template",
			"type": "string"
		}
	},
	"description": "https://ohmyposh.dev/docs/configuration/overview",
	"properties": {
		"accent_color": {
			"$ref": "#/definitions/color",
			"title": "Accent color"
		},
		"blocks": {
			"default": [],
			"description": "https://ohmyposh.dev/docs/configuration/overview#blocks",
			"items": {
				"$ref": "#/definitions/block"
			},
			"title": "Block array",
			"type": "array"
		},
		"console_title_template": {
			"default": "{{ .Shell }} in {{ .Folder }}",
			"description": "https://ohmyposh.dev/docs/configuration/title#console-title-template",
			"title": "Console Title Template",
			"type": "string"
		},
		"debug_prompt": {
			"$ref": "#/definitions/extra_prompt",
			"description": "https://ohmyposh.dev/docs/configuration/debug-prompt",
			"title": "Debug Prompt Setting (for PowerShell only)"
		},
		"error_line": {
			"$ref": "#/definitions/extra_prompt",
			"description": "https://ohmyposh.dev/docs/configuration/line-error",
			"title": "Error Line Setting (for PowerShell only)"
		},
		"final_space": {
			"default": true,
			"description": "https://ohmyposh.dev/docs/configuration/overview#general-settings",
			"title": "Final Space",
			"type": "boolean"
		},
		"palette": {
			"default": {},
			"description": "https://ohmyposh.dev/docs/configuration/colors#palette",
			"patternProperties": {
				".*": {
					"$ref": "#/definitions/color"
				}
			},
			"title": "Palette",
			"type": "object"
		},
		"palettes": {
			"default": {},
			"description": "https://ohmyposh.dev/docs/configuration/colors#palettes",
			"properties": {
				"list": {
					"patternProperties": {
						".*": {
							"$ref": "#/properties/palette"
						}
					},
					"title": "List of palettes",
					"type": "object"
				},
				"template": {
					"title": "Prompt Template",
					"type": "string"
				}
			},
			"title": "Palettes",
			"type": "object"
		},
		"pwd": {
			"default": "",
			"description": "https://ohmyposh.dev/docs/configuration/overview#general-settings",
			"title": "Enable OSC99/7",
			"type": "string"
		},
		"secondary_prompt": {
			"$ref": "#/definitions/extra_prompt",
			"description": "https://ohmyposh.dev/docs/configuration/secondary-prompt",
			"title": "Secondary Prompt Setting"
		},
		"terminal_background": {
			"$ref": "#/definitions/color"
		},
		"tooltips": {
			"default": [],
			"description": "https://ohmyposh.dev/docs/configuration/tooltips",
			"items": {
				"allOf": [
					{
						"$ref": "#/definitions/segment"
					}
				],
				"properties": {
					"tips": {
						"items": {
							"type": "string"
						},
						"title": "The commands for which you want the segment to show",
						"type": "array"
					}
				},
				"required": ["tips"]
			},
			"title": "Tooltip list, prompt elements to display based on context",
			"type": "array"
		},
		"transient_prompt": {
			"$ref": "#/definitions/extra_prompt",
			"description": "https://ohmyposh.dev/docs/configuration/transient",
			"title": "Transient Prompt Setting"
		},
		"valid_line": {
			"$ref": "#/definitions/extra_prompt",
			"description": "https://ohmyposh.dev/docs/configuration/line-error",
			"title": "Valid Line Setting (for PowerShell only)"
		}
	},
	"required": ["blocks"],
	"title": "The Oh My Posh theme definition",
	"type": "object"
}
